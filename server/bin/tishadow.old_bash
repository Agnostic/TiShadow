#!/bin/bash

## If Start Server Option
if [ "$1" = "server" ]
then
  tishadow-server
  exit 0
fi

## Clear Option
if [ "$1" = "clear" ]
then
  echo "Clearing cache on devices."
  wget -qO - --post-data="" http://localhost:3000/clear_cache
  exit 0
fi

## Otherwise regular app build
## Confirm we are in the project root
if [ ! -f "./tiapp.xml" ]
then
  echo "Script must be executed in the Titanium project's root directory"
  exit 1
fi
## Prepare Build directory
echo "Begining Build Process"

## ARE WE IN A UPDATE MODE
if [ -d "./build/tishadow/src" -a -f "./build/tishadow/last_updated" -a "$1" = "update" ]
then
  FLAG=" -newer "
  UPFILE="`pwd`/build/tishadow/last_updated"
  FILES=`find ./Resources/* -type f -newer ./build/tishadow/last_updated`
  [ -f ./build/tishadow/dist/bundle.zip ] && ( rm ./build/tishadow/dist/bundle.zip ) 
  if [ -z $FILES ] 
  then 
    echo "NOTHING TO UPDATE"
    exit 1
  fi
else
  echo "Performing full build."
  if [ ! -d "./build" ]
  then
    mkdir build
  fi

  if [ -d "./build/tishadow" ]
  then
    rm -rf ./build/tishadow
  fi

  mkdir ./build/tishadow
  mkdir ./build/tishadow/src
  mkdir ./build/tishadow/dist
fi

## Move the required files
cd Resources
find . -type f$FLAG"$UPFILE" -print0| tar --null --no-recursion -cf - --files-from - | ( cd ../build/tishadow/src; tar xf - )
cd ..

##Propend the log commonjs library
find ./build/tishadow/src -name "*.js"$FLAG"$UPFILE" | while read FILE
do
  #THE EXCLUSION OF UNDERSCORE COMPENSATE FOR LAZY REPLACE
  #THE REGEX SHOULD BE IMPROVED
  if [[ ! $FILE == *underscore.js ]]
  then
    echo "BUILDING FILE: $FILE"
    perl -pi -e "s/(['\"])\//Ti.Filesystem.applicationDataDirectory\+\1/g" "$FILE"
    perl -pi -e 's/require/p.require/g' "$FILE"
    perl -pi -e "s/Ti.API/log/g" "$FILE"
  fi
  echo "var p = require('/api/PlatformRequire'), log = require('/api/Log');" | cat - "$FILE" > /tmp/mytmpfile && mv /tmp/mytmpfile "$FILE"
done

cd build/tishadow/src
find .$FLAG"$UPFILE" -print | zip ../dist/bundle.zip -@
cd ../../..

if [ "$1" = "bundle" ]
  echo "Bundle Ready: $(echo `pwd`)/build/tishadow/dist/bundle.zip"
then
  touch ./build/tishadow/last_updated
  wget -qO - --post-data="bundle=$(echo `pwd`)/build/tishadow/dist/bundle.zip" http://localhost:3000/
fi
