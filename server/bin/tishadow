#!/usr/bin/env node
var
    api      = require('./support/api'),
    compiler = require('./support/compiler'),
    colors   = require('colors'),
    pkginfo  = require('pkginfo'),
    program  = require('commander')
    ;


pkginfo(module, 'name', 'version');

program
  .version(module.exports.version, '-v, --version')
  .description('TiShadow CLI')
  .usage('COMMAND [OPTIONS]')

program.command('server')
  .description('start the TiShadow server'.grey)
  .action(function() {
    require("../app.js");
  });

program.command('clear')
  .description('clear the application cache on all connected devices'.grey)
  .action(api.clearCache);

program.command('run')
  .description('deploy full application to all connected devices'.grey)
  .option('-u, --update', 'Only send recently changed files')
  .option('-l, --locale <locale>', 'Set the locale in in the TiShadow app')
  .option('-t, --tail-logs', 'Tail server logs on deploy')
  .action(compiler);

program.command('bundle')
  .description('prepare a TiShadow bundle without deploying it'.grey)
  .option('-u, --update', 'Only send recently changed files')
  .option('-l, --locale <locale>', 'Set the locale in in the TiShadow app')
  .option('-j, --jshint', 'Analyse code with JSHint')
  .action(compiler);

program.command('spec')
  .description('run jasmin spec tests on all connected devices'.grey)
  .option('-u, --update', 'Only send recently changed files')
  .option('-l, --locale <locale>', 'Set the locale in in the TiShadow app')
  .option('-j, --jshint', 'Analyse code with JSHint')
  .option('-x, --junit-xml','Output report as JUnit XML')
  .action(compiler);

program.command('snip [code]')
  .description('send code snippet to all connected device.\n'.grey +
               'If code is not provided then a REPL will be made available'.grey)
  .action(api.sendSnippet);
  
program.command('log')
  .description('tail server logs'.grey)
  .action(require('./support/socket').connect);


program.parse(process.argv);

// Display help on an invalid command
if (program.args.length === 0 || typeof program.args[program.args.length -1] === 'string'){
  program.help();
}


