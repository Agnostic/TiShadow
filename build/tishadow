#!/bin/bash


## Confirm we are in the project root
if [ ! -f "./tiapp.xml" ]
then
  echo "Script must be executed in the Titanium project's root directory"
  exit 1
fi
TI_PATH=`pwd`


## Prepare Build directory
echo "Begining Build Process"

## ARE WE IN A UPDATE MODE
if [ -d "./build/tishadow/src" -a -f "./build/tishadow/last_updated" -a "$1" = "update" ]
then
  FLAG=" -newer $TI_PATH/build/tishadow/last_updated"
  FILES=`find ./Resources/* -type f -newer ./build/tishadow/last_updated`
  [ -f ./build/tishadow/dist/bundle.zip ] && ( rm ./build/tishadow/dist/bundle.zip ) 
  if [ -z $FILES ] 
  then 
    echo "NOTHING TO UPDATE"
    exit 1
  fi
else
  echo "Performing full build."
  FLAG=""
  if [ ! -d "./build" ]
  then
    mkdir build
  fi

  if [ -d "./build/tishadow" ]
  then
    rm -rf ./build/tishadow
  fi

  mkdir ./build/tishadow
  mkdir ./build/tishadow/src
  mkdir ./build/tishadow/dist
fi

## Move the required files
cd Resources
find -x . -type f$FLAG -print0| tar --null --no-recursion -cf - --files-from - | ( cd ../build/tishadow/src; tar xf - )
cd ..

##Propend the log commonjs library
for FILE in `find ./build/tishadow/src -name "*.js"$FLAG`
do
  #THE EXCLUSION OF UNDERSCORE COMPENSATE FOR LAZY REPLACE
  #THE REGEX SHOULD BE IMPROVED
  if [[ ! $FILE == *underscore.js ]]
  then
    echo "BUILDING FILE: $FILE"
    #sed -i '' 's/"\//Ti.Filesystem.applicationDataDirectory\+"/' $FILE
    sed -i '' "s/\(['\"]\)\//Ti.Filesystem.applicationDataDirectory\+\1/g" $FILE
    sed -i '' 's/require/p.require/g' $FILE
    sed -i '' "s/Ti.API/log/g" $FILE
  fi
  echo "var p = require('/api/PlatformRequire'), log = require('/api/Log');" | cat - $FILE > /tmp/mytmpfile && mv /tmp/mytmpfile $FILE
done

cd build/tishadow/src
zip ../dist/bundle.zip `find .$FLAG`
cd ../../..
touch ./build/tishadow/last_updated

#wget --post-file=`cat ./build/tishadow/dist/bundle.zip | openssl base64` http://localhost:3000/shadowpost
wget --post-data="bundle=$TI_PATH/build/tishadow/dist/bundle.zip" http://localhost:3000/
rm index.html
